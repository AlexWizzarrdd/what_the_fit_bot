import os
import sys
from telegram import Update, ReplyKeyboardMarkup, InputMediaPhoto
from telegram.ext import ContextTypes
from states import GENERAL_RECOMMEND, MENU_CHOICE, GENDER_SELECT
from utils.navigation import return_to_main_menu
from pathlib import Path

sys.path.append(os.path.dirname(os.path.abspath(__file__)))
# –ü—É—Ç—å –∫ src/media
BASE_DIR = Path(__file__).resolve().parents[1] / "media" / "male"

RECOMMEND_OPTIONS = [
    "–¢—Ä–µ–Ω–¥—ã —Å–µ–∑–æ–Ω–∞",
    "–ú–∏–∫—Ä–æ-–±—Ä–µ–Ω–¥—ã",
    "–¶–≤–µ—Ç–æ–≤—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è",
    "–ß—Ç–æ-—Ç–æ –Ω–µ–æ–±—ã—á–Ω–æ–µ",
]

GENDER_OPTIONS = ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"]

RECOMMENDATION_DATA = {
    "–¢—Ä–µ–Ω–¥—ã —Å–µ–∑–æ–Ω–∞": {
        "–ú—É–∂—Å–∫–æ–π": [
            {
                "text": "üß• –°–æ–≤–µ—Ç 1: –õ—ë–≥–∫–∞—è —Ä—É–±–∞—à–∫–∞ / –ø–æ–ª–æ + –ª–µ—Ç–Ω–∏–µ —à–æ—Ä—Ç—ã",
                "description": (
                    "–ù–æ—Å–∏–±–µ–ª—å–Ω—ã–π ¬´–¥–∞—á–Ω—ã–π-–≥–æ—Ä–æ–¥—Å–∫–æ–π¬ª –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞ +20 ‚Ä¶ +30 ¬∞C.\n\n"
                    "–¢–∫–∞–Ω—å: –ª–µ–Ω –∏–ª–∏ —Ç–æ–Ω–∫–∏–π —Ö–ª–æ–ø–æ–∫ –¥—ã—à–∞—Ç –∏ –Ω–µ –º–Ω—É—Ç—Å—è.\n"
                    "–î–ª–∏–Ω–∞ —à–æ—Ä—Ç: –¥–æ –∫–æ–ª–µ–Ω–∞ –∏–ª–∏ —á—É—Ç—å –≤—ã—à–µ ‚Äî –≤—ã–≥–ª—è–¥–∏—Ç –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –∏ –Ω–µ ¬´–ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ¬ª.\n"
                    "–û–±—É–≤—å: –±–µ–ª—ã–µ –∫–µ–¥—ã, –º–æ–∫–∞—Å–∏–Ω—ã, –ª–∏–±–æ –ª—ë–≥–∫–∏–µ –ø–∞—Ä—É—Å–∏–Ω–æ–≤—ã–µ —ç—Å–ø–∞–¥—Ä–∏–ª—å–∏.\n"
                    "–§–∏—à–∫–∞ —Å–µ–∑–æ–Ω–∞: –Ω–µ–±—Ä–æ—Å–∫–∏–π –∞–∫—Å–µ—Å—Å—É–∞—Ä (–ø–ª–µ—Ç—ë–Ω—ã–π –±—Ä–∞—Å–ª–µ—Ç, —á–∞—Å—ã —Å –∫–æ—Ä–∏—á–Ω–µ–≤—ã–º —Ä–µ–º–µ—à–∫–æ–º) –≤–º–µ—Å—Ç–æ –∫—Ä—É–ø–Ω—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤."
                ),
                "photos": ["trends1_1.jpg", "trends1_2.jpg"],
            },
            {
                "text": "üëñ –°–æ–≤–µ—Ç 2: –°–º–∞—Ä—Ç-–∫—ç–∂—É–∞–ª: –ø–æ–ª–æ + —á–∏–Ω–æ—Å—ã",
                "description": (
                    "–†–∞–±–æ—á–∏–µ –±—É–¥–Ω–∏ –±–µ–∑ –≥–∞–ª—Å—Ç—É–∫–∞, —Å–≤–∏–¥–∞–Ω–∏–µ –≤ –∫–æ—Ñ–µ–π–Ω–µ –∏–ª–∏ –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É.\n\n"
                    "–ö—Ä–æ–π –ø–æ–ª–æ: —Å–ª–µ–≥–∫–∞ –ø—Ä–∏—Ç–∞–ª–µ–Ω–Ω—ã–π, –≤–æ—Ä–æ—Ç–Ω–∏–∫ –±–µ–∑ ¬´—Å—Ç–æ–π–∫–∏¬ª, —Ä—É–∫–∞–≤ –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã –±–∏—Ü–µ–ø—Å–∞.\n"
                    "–ß–∏–Ω–æ—Å—ã: –ø–ª–æ—Ç–Ω–æ—Å—Ç—å 220-260 –≥/–º¬≤, —Å—Ä–µ–¥–Ω—è—è –ø–æ—Å–∞–¥–∫–∞, –¥–ª–∏–Ω–∞ ‚Äì –¥–æ –∫–æ—Å—Ç–æ—á–∫–∏.\n"
                    "–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞: –±–∞–∑–æ–≤—ã–µ —Ç–æ–Ω–∞ (–±–µ–∂, –æ–ª–∏–≤–∞, —Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–π) –ª–µ–≥–∫–æ —Å–æ—á–µ—Ç–∞—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π.\n"
                    "–û–±—É–≤—å: –∫–æ–∂–∞–Ω—ã–µ –∫–µ–¥—ã, –ª–æ—Ñ–µ—Ä—ã, –ª–∏–±–æ –¥–µ—Ä–±–∏ –Ω–∞ —Ç–æ–Ω–∫–æ–π –ø–æ–¥–æ—à–≤–µ."
                ),
                "photos": ["trends2_1.jpg", "trends2_2.jpg", "trends2_3.jpg"],
            },
            {
                "text": "üé© –°–æ–≤–µ—Ç 3: –ù–æ—Ä–º–∫–æ—Ä / Gorpcore: –∫–∞—Ä–≥–æ-–±—Ä—é–∫–∏ + —Ç–µ—Ö –∫—É—Ä—Ç–∫–∞",
                "description": (
                    "–ü—Ä–∞–≥–º–∞—Ç–∏—á–Ω—ã–π —É–ª–∏—á–Ω—ã–π –æ–±—Ä–∞–∑ –¥–ª—è –º–µ–∂—Å–µ–∑–æ–Ω—å—è –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤—ã—Ö–æ–¥–Ω—ã—Ö.\n\n"
                    "–ö–∞—Ä–≥–æ: —Å–≤–æ–±–æ–¥–Ω—ã–π –ø—Ä—è–º–æ–π –∫—Ä–æ–π, –º–∞—Ç–æ–≤—ã–π —Ö–ª–æ–ø–æ–∫ –∏–ª–∏ —Å–º–µ—Å–æ–≤—ã–π —Ä–∏–ø-—Å—Ç–æ–ø.\n"
                    "–í–µ—Ä—Ö: —Å–æ—Ñ—Ç—à–µ–ª–ª, –ª—ë–≥–∫–∏–π –ø—É—Ö–æ–≤–∏–∫ –∏–ª–∏ —Ñ–ª–∏—Å–æ–≤—ã–π —Ç–æ–ø –≤ —Ç—ë–º–Ω–æ-—Å–µ—Ä—ã—Ö/—Ö–∞–∫–∏ –æ—Ç—Ç–µ–Ω–∫–∞—Ö.\n"
                    "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã: –∫—Ä–æ—Å—Å-–±–æ–¥–∏ —Å—Ç—Ä–æ–ø–∞, –±–µ–π—Å–±–æ–ª–∫–∞ –±–µ–∑ –±—Ä–æ—Å–∫–∏—Ö –Ω–∞–¥–ø–∏—Å–µ–π.\n"
                    "–û–±—É–≤—å: —Ç—Ä–µ–π–ª-–∫—Ä–æ—Å—Å–æ–≤–∫–∏ –∏–ª–∏ —Ö–∞–π–∫–µ—Ä—ã; –ø–æ–¥–æ–π–¥—É—Ç –∏ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ ¬´New Balance¬ª 574/550."
                ),
                "photos": ["trends3_1.jpg", "trends3_2.jpg", "trends3_3.jpg"],
            },
        ]
    }
}


async def general_recommend_entry(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[gender] for gender in GENDER_OPTIONS]
    keyboard.append(["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"])

    await update.message.reply_text(
        "–ö–æ–≥–æ —Å—Ç–∏–ª–∏–∑—É–µ–º? üë§",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
    )
    return GENDER_SELECT


async def handle_gender_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    gender = update.message.text

    if gender == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        return await return_to_main_menu(update, context)

    context.user_data["gender"] = gender
    return await return_to_recommend_options(update, context)


async def return_to_recommend_options(
    update: Update, context: ContextTypes.DEFAULT_TYPE
):
    keyboard = [[opt] for opt in RECOMMEND_OPTIONS]
    keyboard.append(["–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ"])
    keyboard.append(["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"])

    gender = context.user_data.get("gender", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è").lower()

    await update.message.reply_text(
        f"–û—Ç–ª–∏—á–Ω–æ! –ü–æ–∫–∞–∑—ã–≤–∞—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è: *{gender}*.\n–ß—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ?",
        parse_mode="Markdown",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
    )
    return GENERAL_RECOMMEND


async def handle_general_recommend(update: Update, context: ContextTypes.DEFAULT_TYPE):
    choice = update.message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        return await return_to_main_menu(update, context)
    if choice == "–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        return await return_to_recommend_options(update, context)

    gender = context.user_data.get("gender")

    await update.message.reply_text("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...")

    tips = RECOMMENDATION_DATA.get(choice, {}).get(gender)

    if not tips:
        await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
        return GENERAL_RECOMMEND

    for tip in tips:
        await update.message.reply_text(f"{tip['text']}\n\n{tip['description']}")
        photos = tip.get("photos", [])

        media_paths = [BASE_DIR / p for p in photos if (BASE_DIR / p).exists()]

        if not media_paths:
            await update.message.reply_text("‚ö†Ô∏è –ù–∏ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            continue

        if len(media_paths) > 1:
            media = [InputMediaPhoto(open(p, "rb")) for p in media_paths]
            await update.message.reply_media_group(media)
        else:
            with open(media_paths[0], "rb") as photo:
                await update.message.reply_photo(photo)

    await update.message.reply_text(
        "–•–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë?",
        reply_markup=ReplyKeyboardMarkup(
            [["–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ"], ["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]],
            resize_keyboard=True,
        ),
    )
    return GENERAL_RECOMMEND
