from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from states import STYLE_SELECT, STYLE_DETAIL, MENU_CHOICE
from utils.navigation import return_to_main_menu

STYLES = ["–ö–ª–∞—Å—Å–∏–∫–∞", "Casual", "Streetwear", "Old Money", "–°–ø–æ—Ä—Ç"]
SUBSTYLE_CHOICES = ["–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ", "–ù–∞ –≤—ã—Ö–æ–¥", "–í—Å—ë –ø–æ–¥—Ä—è–¥"]


async def pick_style_entry(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[s] for s in STYLES]
    keyboard.append(["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"])  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
    )
    return STYLE_SELECT


async def style_select(update: Update, context: ContextTypes.DEFAULT_TYPE):
    choice = update.message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        return await return_to_main_menu(update, context)
    if choice == "–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        return await pick_style_entry(update, context)

    context.user_data["style"] = choice

    if choice in ["Casual", "Streetwear"]:
        keyboard = [[s] for s in SUBSTYLE_CHOICES]
        keyboard.append(["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"])  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∏ —Å—é–¥–∞
        await update.message.reply_text(
            "–ù–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏–ª–∏ —á—Ç–æ-—Ç–æ –æ—Å–æ–±–æ–µ?",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
        )
        return STYLE_DETAIL
    else:
        return await send_style_results(update, context)


async def style_detail(update: Update, context: ContextTypes.DEFAULT_TYPE):
    choice = update.message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        return await return_to_main_menu(update, context)
    if choice == "–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        return await pick_style_entry(update, context)

    context.user_data["substyle"] = choice
    return await send_style_results(update, context)


async def send_style_results(update: Update, context: ContextTypes.DEFAULT_TYPE):
    style = context.user_data.get("style")
    sub = context.user_data.get("substyle", "")

    await update.message.reply_text("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...")

    await update.message.reply_text(
        f"–í–æ—Ç —Ç–≤–æ—è –ø–æ–¥–±–æ—Ä–∫–∞ —Å—Ç–∏–ª—è: {style} {f'({sub})' if sub else ''} üëï\n"
        "- –ë–µ–ª–∞—è —Ä—É–±–∞—à–∫–∞\n"
        "- –°–∏–Ω–∏–µ –¥–∂–∏–Ω—Å—ã\n"
        "- –ö—Ä–æ—Å—Å–æ–≤–∫–∏\n",
        reply_markup=ReplyKeyboardMarkup(
            [["–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ"], ["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]],
            resize_keyboard=True,
        ),
    )
    return STYLE_SELECT
